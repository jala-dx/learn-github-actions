# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push
  push:
    tags: 
    - "v*.*.*"
  workflow_call:
    inputs: 
      version_tag:
        description: 'Version tag for kurl release'
        required: true
        type: string
  workflow_dispatch:
    inputs: 
      version_tag:
        description: 'Version tag for kurl release'
        required: true

jobs:
  job2:
    runs-on: ubuntu-latest
    needs:
    - verify-tag
    steps:
    - uses: actions/checkout@v2
    - uses: hadolint/hadolint-action@v1.5.0
      with:
       dockerfile: Dockerfile

    - name: Run 2nd job
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
        export VERSION_TAG=$(echo $GITHUB_REF | awk -F'/' '{ print $NF }')
     
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: Dockerfile

      - name: Verify tag
        run: |
          VERSION_TAG=${{ inputs.version_tag }} 
          echo ... HELLO $VERSION_TAG
          OUTPUT=`bin/verify_tag.sh "${VERSION_TAG}"`

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          export VERSION_TAG=$(echo $GITHUB_REF | awk -F'/' '{ print $NF }')
          echo dumping $GITHUB_REF
          echo $GITHUB_REF
          echo dumping $VERSION_TAG
          echo $VERSION_TAG
          echo dumping input version ${{ inputs.version_tag }} 
          echo dumping eventst version ${{ github.event.version_tag }} 
          export CURRENT_TAG=${{ github.event.inputs.version_tag || inputs.version_tag }}
          echo current_tag $CURRENT_TAG
          git fetch --tags
          tag=$(git tag | grep '^v20' | grep -v 'v2022\.09\.04' | sort | tail -1)
          tag_arr=(${tag//-/ })
          rel_num=${tag_arr[1]}
          rel_num=$((rel_num+1))
          todays_date=$(date +'v%Y.%m.%d')
          echo am here...$todays_date, $rel_num, ${tag_arr[0]}
          if [ "${todays_date}" = "${tag_arr[0]}" ]; then 
            echo "Strings are equal."
            tag="${todays_date}-${rel_num}"
          fi 
          echo am here...$todays_date, $rel_num, ${tag_arr[0]}, $tag


